// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// https://raw.githubusercontent.com/grpc/grpc-java/master/examples/src/main/proto/helloworld.proto

syntax = "proto3";

option java_multiple_files = true;
option java_outer_classname = "healthProto";
option objc_class_prefix = "HLW";
option java_package = "Project.CA_Mengzhao_Xu";
package CA_Mengzhao_Xu;

// Service related to patient activities
service PatientService {
  rpc GetPatientDetails (PatientRequest) returns (PatientDetails) {} // Unary
  rpc UpdatePatientDetails (PatientDetails) returns (Status) {}      // Unary
  rpc ListMedicalHistory (PatientRequest) returns (stream MedicalHistory) {} // Server streaming
}

// Service related to doctor activities
service DoctorService {
  rpc GetDoctorDetails (DoctorRequest) returns (DoctorDetails) {}  // Unary
  rpc UpdateDoctorAvailability (DoctorAvailability) returns (Status) {}  // Unary
  rpc StreamDoctorAvailability (stream DoctorAvailability) returns (Status) {} // Client streaming
}

// Service related to appointment bookings
service AppointmentService {
  rpc BookAppointment (AppointmentRequest) returns (AppointmentConfirmation) {} // Unary
  rpc GetAppointmentStatus (AppointmentStatusRequest) returns (AppointmentStatus) {} // Unary
  rpc StreamAppointmentUpdates (stream AppointmentRequest) returns (stream AppointmentStatus) {} // Bi-directional streaming
}


// Request to get details of a patient by ID
message PatientRequest {
  string patient_id = 1;
}

// Details related to a patient
message PatientDetails {
  string patient_id = 1;
  string name = 2;
  string age = 3;
  string gender = 4;
  repeated MedicalHistory medical_history = 5;
}

// Medical history of a patient
message MedicalHistory {
  string disease = 1;
  string treatment = 2;
  string date = 3; // This could be a more complex timestamp type
}

// Request to get details of a doctor by ID
message DoctorRequest {
  string doctor_id = 1;
}

// Details related to a doctor
message DoctorDetails {
  string doctor_id = 1;
  string name = 2;
  string specialty = 3;
  string available_from = 4; // Could be a timestamp
  string available_till = 5; // Could be a timestamp
}

// Doctor's availability update
message DoctorAvailability {
  string doctor_id = 1;
  string available_from = 2;
  string available_till = 3;
}

// Request to book an appointment
message AppointmentRequest {
  string patient_id = 1;
  string doctor_id = 2;
  string preferred_time = 3; // Could be a timestamp
}

// Confirmation of an appointment
message AppointmentConfirmation {
  string appointment_id = 1;
  string patient_id = 2;
  string doctor_id = 3;
  string confirmed_time = 4;
}

// Request to get the status of an appointment
message AppointmentStatusRequest {
  string appointment_id = 1;
}

// Status of an appointment
message AppointmentStatus {
  string appointment_id = 1;
  string status = 2; // Could be ENUM with values like CONFIRMED, PENDING, CANCELED, etc.
}

// General status message for various operations
message Status {
  bool success = 1;
  string message = 2;
}